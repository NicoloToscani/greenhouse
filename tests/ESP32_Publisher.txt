//===================================== HIVE MQTT ==============================
#include <Arduino.h>
#include <Arduino.h>
#include <WiFi.h>
#include <PubSubClient.h>
#include <SimpleDHT.h>

// Inizializzo variabili sensore luce
int light;

// Inizializzo variabili sensore DHT11 (temperatura, umidit√†)
int pinDHT11 = 32;
SimpleDHT11 dht11(pinDHT11);

//const char *SSID = "iPhone Beo";
//const char *PWD = "pila2021";

// Dichiaro variabili Wi-Fi
const char* ssid = "iPhone Beo";   // nome rete
const char* password = "pila2021";     // password rete

int status = WL_IDLE_STATUS; 
long lastPublishMillis = 0;
int connectionDelay = 1;
int updateInterval = 15;

/*
// Connessione al wi-fi
void connectToWiFi() {
  Serial.print("Connectiog to ");
 
  WiFi.begin(SSID, PWD);
  Serial.println(SSID);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.print("Connected.");
}
*/


//  Connessione MQTT client
WiFiClient wifiClient;
PubSubClient mqttClient(wifiClient); 

char *mqttServer = "broker.hivemq.com";
int mqttPort = 1883;

void setupMQTT() {
  mqttClient.setServer(mqttServer, mqttPort);
  // set the callback function
  mqttClient.setCallback(callback);
}



// Riconnessione
void reconnect() {
  Serial.println("Try to connecting to MQTT Broker...");
  while (!mqttClient.connected()) {
      Serial.println("Reconnecting to MQTT Broker..");
      delay(2000);
      
      String clientId = "Test";
      clientId += String(random(0xffff), HEX);
      
      if (mqttClient.connect(clientId.c_str())) {
        Serial.println("Connected to mqtt broker.");
        // subscribe to topic
        mqttClient.subscribe("/swa/commands");
      }      
  }
}



// ===================== SETUP ===================
void setup() {
  Serial.begin(115200);  //Initialize serial
  //initBME();
  Serial.println("start...");

  // Connetto o tento la riconnessione verso il wifi
    if(WiFi.status() != WL_CONNECTED){
      Serial.print("Attempting to connection to wi-fi...");
      while(WiFi.status() != WL_CONNECTED){
        WiFi.begin((char*)ssid, password); 
        delay(5000);     
      } 
    }
  
  setupMQTT();
}



// ===================== LOOP ===================
void loop() {
    if (!mqttClient.connected())
        reconnect();
        mqttClient.loop();

    // lettura valori sensore luce
    light = analogRead(34);
    float fLight = 3.3 * light / 4096;

    long now = millis();
    long last_time = 0;    

    // Publishing data throgh MQTT
    Serial.println("Pubblicazione valori: ");        
    int data = int(light);
    Serial.print("Light: ");  
    Serial.print(data);
    Serial.println(" lux");
    
    mqttClient.publish("/swa/light", String(data).c_str());
    delay(20000);     
}


// Call back
void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Callback - ");
  Serial.print("Message:");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
}